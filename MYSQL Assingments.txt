Assingment 3 

1)	Show customer number, customer name, state and credit limit from customers table for below conditions. Sort the results by highest to lowest values of creditLimit.

●	State should not contain null values
●	credit limit should be between 50000 and 100000



mysql> SELECT customerNumber, customerName, state, creditLimit
    -> FROM customers
    -> WHERE state IS NOT NULL
    ->   AND creditLimit BETWEEN 50000 AND 100000
    -> ORDER BY creditLimit DESC;
+----------------+------------------------------------+----------------+-------------+
| customerNumber | customerName                       | state          | creditLimit |
+----------------+------------------------------------+----------------+-------------+
|            334 | Suominen Souveniers                | default_values |    98800.00 |
|            166 | Handji Gifts& Co                   | default_values |    97900.00 |
|            167 | Herkku Gifts                       | default_values |    96800.00 |
|            186 | Toys of Finland, Co.               | default_values |    96500.00 |
|            455 | Super Scale Inc.                   | CT             |    95400.00 |
|            299 | Norway Gifts By Mail, Co.          | default_values |    95100.00 |
|            406 | Auto Canal+ Petit                  | default_values |    95000.00 |
|            320 | Mini Creations Ltd.                | MA             |    94500.00 |
|            398 | Tokyo Collectables, Ltd            | Tokyo          |    94400.00 |
|            240 | giftsbymail.co.uk                  | Isle of Wight  |    93900.00 |
|            282 | Souveniers And Things Co.          | NSW            |    93300.00 |
|            201 | UK Collectables, Ltd.              | default_values |    92700.00 |
|            205 | Toys4GrownUps.com                  | CA             |    90700.00 |
|            311 | Oulu Toy Supplies, Inc.            | default_values |    90500.00 |
|            202 | Canadian Gift Exchange Network     | BC             |    90300.00 |
|            260 | Royal Canadian Collectables, Ltd.  | BC             |    89600.00 |
|            323 | Down Under Souveniers, Inc         | default_values |    88000.00 |
|            412 | Extreme Desk Decorations, Ltd      | default_values |    86800.00 |
|            462 | FunGiftIdeas.com                   | MA             |    85800.00 |
|            495 | Diecast Collectables               | MA             |    85100.00 |
|            161 | Technics Stores Inc.               | CA             |    84600.00 |
|            172 | La Corne D'abondance, Co.          | default_values |    84300.00 |
|            175 | Gift Depot Inc.                    | CT             |    84300.00 |
|            145 | Danish Wholesale Imports           | default_values |    83400.00 |
|            171 | Daedalus Designs Imports           | default_values |    82900.00 |
|            121 | Baane Mini Imports                 | default_values |    81700.00 |
|            385 | Cruz & Sons Co.                    | default_values |    81500.00 |
|            177 | Osaka Souveniers Co.               | Osaka          |    81200.00 |
|            353 | Reims Collectables                 | default_values |    81100.00 |
|            339 | Classic Gift Ideas, Inc            | PA             |    81100.00 |
|            314 | Petit Auto                         | default_values |    79900.00 |
|            256 | Auto Associés & Cie.               | default_values |    77900.00 |
|            357 | GiftsForHim.com                    | default_values |    77700.00 |
|            450 | The Sharp Gifts Warehouse          | CA             |    77600.00 |
|            324 | Stylish Desk Decors, Co.           | default_values |    77000.00 |
|            415 | Bavarian Collectables Imports, Co. | default_values |    77000.00 |
|            181 | Vitachrome Inc.                    | NY             |    76400.00 |
|            486 | Motor Mint Distributors Inc.       | PA             |    72600.00 |
|            112 | Signal Gift Stores                 | NV             |    71800.00 |
|            382 | Salzburg Collectables              | default_values |    71700.00 |
|            379 | Collectables For Less Inc.         | MA             |    70700.00 |
|            189 | Clover Collections, Co.            | default_values |    69400.00 |
|            204 | Online Mini Collectables           | MA             |    68700.00 |
|            250 | Lyon Souveniers                    | default_values |    68100.00 |
|            424 | Classic Legends Inc.               | NY             |    67500.00 |
|            484 | Iberia Gift Imports, Corp.         | default_values |    65700.00 |
|            350 | Marseille Mini Autos               | default_values |    65000.00 |
|            129 | Mini Wheels Co.                    | CA             |    64600.00 |
|            242 | Alpha Cognac                       | default_values |    61100.00 |
|            216 | Enaco Distributors                 | default_values |    60300.00 |
|            487 | Signal Collectibles Ltd.           | CA             |    60300.00 |
|            471 | Australian Collectables, Ltd       | Victoria       |    60300.00 |
|            128 | Blauer See Auto, Co.               | default_values |    59700.00 |
|            344 | CAF Imports                        | default_values |    59600.00 |
|            211 | King Kong Collectables, Co.        | default_values |    58600.00 |
|            347 | Men 'R' US Retailers, Ltd.         | CA             |    57700.00 |
|            475 | West Coast Collectables Co.        | CA             |    55400.00 |
|            209 | Mini Caravy                        | default_values |    53800.00 |
|            144 | Volvo Model Replicas, Co           | default_values |    53100.00 |
|            333 | Australian Gift Network, Co        | Queensland     |    51600.00 |
+----------------+------------------------------------+----------------+-------------+
60 rows in set (0.07 sec)


1)	Show the unique productline values containing the word cars at the end from products table.

mysql> SELECT DISTINCT productline
    -> FROM products
    -> WHERE productline LIKE '%cars';
+--------------+
| productline  |
+--------------+
| Classic Cars |
| Vintage Cars |
+--------------+

DAY 4

1)	Show the orderNumber, status and comments from orders table for shipped status only. If some comments are having null values then show them as “-“.

mysql> SELECT orderNumber, status, IFNULL(comments, '-') AS comments
    -> FROM orders
    -> WHERE status = 'Shipped' limit 12;

-----------+
| orderNumber | status  | comments                                                               |
+-------------+---------+------------------------------------------------------------------------+
|       10100 | Shipped | -                                                                      |
|       10101 | Shipped | Check on availability.                                                 |
|       10102 | Shipped | -                                                                      |
|       10103 | Shipped | -                                                                      |
|       10104 | Shipped | -                                                                      |
|       10105 | Shipped | -                                                                      |
|       10106 | Shipped | -                                                                      |
|       10107 | Shipped | Difficult to negotiate with customer. We need more marketing materials |
|       10108 | Shipped | -                                                                      |
|       10109 | Shipped | Customer requested that FedEx Ground is used for this shipping         |
|       10110 | Shipped | -                                                                      |
|       10111 | Shipped | -                                                                      |
+-------------+---------+------------------------------------------------------------------------+


2)	Select employee number, first name, job title and job title abbreviation from employees table based on following conditions.
If job title is one among the below conditions, then job title abbreviation column should show below forms.
●	President then “P”
●	Sales Manager / Sale Manager then “SM”
●	Sales Rep then “SR”
●	Containing VP word then “VP”


mysql> SELECT
    ->     employeeNumber,
    ->     firstName,
    ->     jobTitle,
    ->     CASE
    ->         WHEN jobTitle = 'President' THEN 'P'
    ->         WHEN jobTitle LIKE '%Sales Manager%' THEN 'SM'
    ->         WHEN jobTitle = 'Sales Rep' THEN 'SR'
    ->         WHEN jobTitle LIKE '%VP%' THEN 'VP'
    ->         ELSE jobTitle -- Keep the original job title if it doesn't match any of the conditions
    ->     END AS jobTitleAbbreviation
    -> FROM employees;
+----------------+-----------+----------------------+----------------------+
| employeeNumber | firstName | jobTitle             | jobTitleAbbreviation |
+----------------+-----------+----------------------+----------------------+
|           1002 | Diane     | President            | P                    |
|           1056 | Mary      | VP Sales             | VP                   |
|           1076 | Jeff      | VP Marketing         | VP                   |
|           1088 | William   | Sales Manager (APAC) | SM                   |
|           1102 | Gerard    | Sale Manager (EMEA)  | Sale Manager (EMEA)  |
|           1143 | Anthony   | Sales Manager (NA)   | SM                   |
|           1165 | Leslie    | Sales Rep            | SR                   |
|           1166 | Leslie    | Sales Rep            | SR                   |
|           1188 | Julie     | Sales Rep            | SR                   |
|           1216 | Steve     | Sales Rep            | SR                   |
|           1286 | Foon Yue  | Sales Rep            | SR                   |
|           1323 | George    | Sales Rep            | SR                   |
|           1337 | Loui      | Sales Rep            | SR                   |
|           1370 | Gerard    | Sales Rep            | SR                   |
|           1401 | Pamela    | Sales Rep            | SR                   |
|           1501 | Larry     | Sales Rep            | SR                   |
|           1504 | Barry     | Sales Rep            | SR                   |
|           1611 | Andy      | Sales Rep            | SR                   |
|           1612 | Peter     | Sales Rep            | SR                   |
|           1619 | Tom       | Sales Rep            | SR                   |
|           1621 | Mami      | Sales Rep            | SR                   |
|           1625 | Yoshimi   | Sales Rep            | SR                   |
|           1702 | Martin    | Sales Rep            | SR                   |
+----------------+-----------+----------------------+----------------------+
23 rows in set (0.01 sec)


DAY 5



1)	For every year, find the minimum amount value from payments table.


mysql> SELECT YEAR(paymentDate) AS paymentYear, MIN(amount) AS minAmount
    -> FROM payments
    -> GROUP BY YEAR(paymentDate);
+-------------+-----------+
| paymentYear | minAmount |
+-------------+-----------+
|        2004 |   1676.14 |
|        2003 |   1128.20 |
|        2005 |    615.45 |
+-------------+-----------+

2)	For every year and every quarter, find the unique customers and total orders from orders table. Make sure to show the quarter as Q1,Q2 etc.

mysql> SELECT
    ->     YEAR(orderDate) AS year,
    ->     CONCAT('Q', QUARTER(orderDate)) AS quarter,
    ->     COUNT(DISTINCT customerNumber) AS uniqueCustomers,
    ->     COUNT(*) AS totalOrders
    -> FROM orders
    -> GROUP BY year, quarter;
+------+---------+-----------------+-------------+
| year | quarter | uniqueCustomers | totalOrders |
+------+---------+-----------------+-------------+
| 2003 | Q1      |              14 |          14 |
| 2003 | Q2      |              18 |          20 |
| 2003 | Q3      |              19 |          20 |
| 2003 | Q4      |              50 |          57 |
| 2004 | Q1      |              25 |          27 |
| 2004 | Q2      |              25 |          30 |
| 2004 | Q3      |              31 |          35 |
| 2004 | Q4      |              48 |          59 |
| 2005 | Q1      |              25 |          37 |
| 2005 | Q2      |              24 |          27 |
+------+---------+-----------------+-------------+

3)Show the formatted amount in thousands unit (e.g. 500K, 465K etc.) for every month (e.g. Jan, Feb etc.) with filter on total amount as 500000 to 1000000. Sort the output by total amount in descending mode. [ Refer. Payments Table]

mysql> SELECT
    ->     DATE_FORMAT(paymentDate, '%b') AS month,
    ->     CONCAT(ROUND(SUM(amount) / 1000), 'K') AS formatted_amount
    -> FROM Payments
    -> GROUP BY month
    -> HAVING SUM(amount) BETWEEN 500000 AND 1000000
    -> ORDER BY SUM(amount) DESC;
+-------+------------------+
| month | formatted_amount |
+-------+------------------+
| Mar   | 990K             |
| May   | 641K             |
| Sep   | 638K             |
| Aug   | 624K             |
| Feb   | 503K             |
| Oct   | 502K             |
+-------+------------------+
6 rows in set (0.23 sec)



DAY 6

1)	Create a journey table with following fields and constraints.

●	Bus_ID (No null values)
●	Bus_Name (No null values)
●	Source_Station (No null values)
●	Destination (No null values)
●	Email (must not contain any duplicates)

mysql> CREATE TABLE journey (
    ->     Bus_ID INT NOT NULL,
    ->     Bus_Name VARCHAR(255) NOT NULL,
    ->     Source_Station VARCHAR(255) NOT NULL,
    ->     Destination VARCHAR(255) NOT NULL,
    ->     Email VARCHAR(255) NOT NULL,
    ->     CONSTRAINT PK_journey PRIMARY KEY (Bus_ID),
    ->     CONSTRAINT UC_Email UNIQUE (Email)
    -> );
Query OK, 0 rows affected (0.35 sec)

mysql> desc journey;
+----------------+--------------+------+-----+---------+-------+
| Field          | Type         | Null | Key | Default | Extra |
+----------------+--------------+------+-----+---------+-------+
| Bus_ID         | int          | NO   | PRI | NULL    |       |
| Bus_Name       | varchar(255) | NO   |     | NULL    |       |
| Source_Station | varchar(255) | NO   |     | NULL    |       |
| Destination    | varchar(255) | NO   |     | NULL    |       |
| Email          | varchar(255) | NO   | UNI | NULL    |       |
+----------------+--------------+------+-----+---------+-------+
5 rows in set (0.11 sec)

2)	Create vendor table with following fields and constraints.

●	Vendor_ID (Should not contain any duplicates and should not be null)
●	Name (No null values)
●	Email (must not contain any duplicates)
●	Country (If no data is available then it should be shown as “N/A”)

mysql> CREATE TABLE vendor (
    ->     Vendor_ID INT NOT NULL,
    ->     Name VARCHAR(255) NOT NULL,
    ->     Email VARCHAR(255) NOT NULL,
    ->     Country VARCHAR(255) DEFAULT 'N/A',
    ->     CONSTRAINT PK_vendor PRIMARY KEY (Vendor_ID),
    ->     CONSTRAINT UC_Email UNIQUE (Email)
    -> );
Query OK, 0 rows affected (0.07 sec)

mysql> DESC VENDOR;
+-----------+--------------+------+-----+---------+-------+
| Field     | Type         | Null | Key | Default | Extra |
+-----------+--------------+------+-----+---------+-------+
| Vendor_ID | int          | NO   | PRI | NULL    |       |
| Name      | varchar(255) | NO   |     | NULL    |       |
| Email     | varchar(255) | NO   | UNI | NULL    |       |
| Country   | varchar(255) | YES  |     | N/A     |       |
+-----------+--------------+------+-----+---------+-------+
4 rows in set (0.01 sec)


3)	Create movies table with following fields and constraints.

●	Movie_ID (Should not contain any duplicates and should not be null)
●	Name (No null values)
●	Release_Year (If no data is available then it should be shown as “-”)
●	Cast (No null values)
●	Gender (Either Male/Female)
●	No_of_shows (Must be a positive number)


3)  Create movies table with following fields and constraints.
    ->
    -> ●Movie_ID (Should not contain any duplicates and should not be null)
    -> ●Name (No null values)
    -> ●Release_Year (If no data is available then it should be shown as "-")
    -> ●Cast (No null values)
    -> ●Gender (Either Male/Female)
    -> ●No_of_shows (Must be a positive number)
    -> ^C
mysql> CREATE TABLE Movies (
    ->     Movie_ID INT NOT NULL AUTO_INCREMENT,
    ->     Name VARCHAR(255) NOT NULL,
    ->     Release_Year INT,
    ->     Cast VARCHAR(255) NOT NULL,
    ->     Gender ENUM('Male', 'Female'),
    ->     No_of_shows INT CHECK (No_of_shows > 0),
    ->     PRIMARY KEY (Movie_ID),
    ->     UNIQUE (Movie_ID),
    ->     CONSTRAINT chk_release_year CHECK (Release_Year IS NULL OR Release_Year > 0),
    ->     CONSTRAINT chk_gender CHECK (Gender IN ('Male', 'Female'))
    -> );
Query OK, 0 rows affected (0.38 sec)

mysql> desc movies;
+--------------+-----------------------+------+-----+---------+----------------+
| Field        | Type                  | Null | Key | Default | Extra          |
+--------------+-----------------------+------+-----+---------+----------------+
| Movie_ID     | int                   | NO   | PRI | NULL    | auto_increment |
| Name         | varchar(255)          | NO   |     | NULL    |                |
| Release_Year | int                   | YES  |     | NULL    |                |
| Cast         | varchar(255)          | NO   |     | NULL    |                |
| Gender       | enum('Male','Female') | YES  |     | NULL    |                |
| No_of_shows  | int                   | YES  |     | NULL    |                |
+--------------+-----------------------+------+-----+---------+----------------+
6 rows in set (0.09 sec)





4)	Create the following tables. Use auto increment wherever applicable

a. Product
✔	product_id - primary key
✔	product_name - cannot be null and only unique values are allowed
✔	description
✔	supplier_id - foreign key of supplier table

b. Suppliers
✔	supplier_id - primary key
✔	supplier_name
✔	location

c. Stock
✔	id - primary key
✔	product_id - foreign key of product table
✔	balance_stock



mysql> create table product(product_id integer AUTO_INCREMENT PRIMARY KEY,product_name VARCHAR(200) NOT NULL UNIQUE,description TEXT, supplier_id INTEGER, FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id));
ERROR 1824 (HY000): Failed to open the referenced table 'suppliers'
mysql> create table product(product_id integer AUTO_INCREMENT PRIMARY KEY,product_name VARCHAR(200) NOT NULL UNIQUE,description TEXT, supplier_id INTEGER, FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id));
ERROR 1824 (HY000): Failed to open the referenced table 'supplier'
mysql> ^C
mysql> CREATE TABLE Suppliers (
    ->     supplier_id INT AUTO_INCREMENT PRIMARY KEY,
    ->     supplier_name VARCHAR(255),
    ->     location VARCHAR(255)
    -> );
Query OK, 0 rows affected (0.21 sec)

mysql> desc suppliers;
+---------------+--------------+------+-----+---------+----------------+
| Field         | Type         | Null | Key | Default | Extra          |
+---------------+--------------+------+-----+---------+----------------+
| supplier_id   | int          | NO   | PRI | NULL    | auto_increment |
| supplier_name | varchar(255) | YES  |     | NULL    |                |
| location      | varchar(255) | YES  |     | NULL    |                |
+---------------+--------------+------+-----+---------+----------------+
3 rows in set (0.07 sec)

mysql> create table product(product_id integer AUTO_INCREMENT PRIMARY KEY,product_name VARCHAR(200) NOT NULL UNIQUE,description TEXT, supplier_id INTEGER, FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id));
Query OK, 0 rows affected (0.05 sec)

mysql> desc product;
+--------------+--------------+------+-----+---------+----------------+
| Field        | Type         | Null | Key | Default | Extra          |
+--------------+--------------+------+-----+---------+----------------+
| product_id   | int          | NO   | PRI | NULL    | auto_increment |
| product_name | varchar(200) | NO   | UNI | NULL    |                |
| description  | text         | YES  |     | NULL    |                |
| supplier_id  | int          | YES  | MUL | NULL    |                |
+--------------+--------------+------+-----+---------+----------------+
4 rows in set (0.01 sec)

mysql> CREATE TABLE Stock (
    ->     id INT AUTO_INCREMENT PRIMARY KEY,
    ->     product_id INT,
    ->     balance_stock INT,
    ->     FOREIGN KEY (product_id) REFERENCES Product(product_id)
    -> );
Query OK, 0 rows affected (0.09 sec)

mysql> desc table;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
mysql> desc stock;
+---------------+------+------+-----+---------+----------------+
| Field         | Type | Null | Key | Default | Extra          |
+---------------+------+------+-----+---------+----------------+
| id            | int  | NO   | PRI | NULL    | auto_increment |
| product_id    | int  | YES  | MUL | NULL    |                |
| balance_stock | int  | YES  |     | NULL    |                |
+---------------+------+------+-----+---------+----------------+
3 rows in set (0.01 sec)



Day 7


1)	Show employee number, Sales Person (combination of first and last names of employees), unique customers for each employee number and sort the data by highest to lowest unique customers.
Tables: Employees, Customers

mysql> SELECT
    ->     E.EmployeeNumber,
    ->     CONCAT(E.FirstName, ' ', E.LastName) AS SalesPerson,
    ->     COUNT(DISTINCT C.CustomerNumber) AS UniqueCustomers
    -> FROM
    ->     Employees E
    -> LEFT JOIN
    ->     Customers C ON E.EmployeeNumber = C.SalesRepEmployeeNumber
    -> GROUP BY
    ->     E.EmployeeNumber,
    ->     SalesPerson
    -> ORDER BY
    ->     UniqueCustomers DESC;
+----------------+-------------------+-----------------+
| EmployeeNumber | SalesPerson       | UniqueCustomers |
+----------------+-------------------+-----------------+
|           1401 | Pamela Castillo   |              10 |
|           1504 | Barry Jones       |               9 |
|           1323 | George Vanauf     |               8 |
|           1501 | Larry Bott        |               8 |
|           1286 | Foon Yue Tseng    |               7 |
|           1370 | Gerard Hernandez  |               7 |
|           1165 | Leslie Jennings   |               6 |
|           1166 | Leslie Thompson   |               6 |
|           1188 | Julie Firrelli    |               6 |
|           1216 | Steve Patterson   |               6 |
|           1337 | Loui Bondur       |               6 |
|           1702 | Martin Gerard     |               6 |
|           1611 | Andy Fixter       |               5 |
|           1612 | Peter Marsh       |               5 |
|           1621 | Mami Nishi        |               5 |
|           1002 | Diane Murphy      |               0 |
|           1056 | Mary Patterson    |               0 |
|           1076 | Jeff Firrelli     |               0 |
|           1088 | William Patterson |               0 |
|           1102 | Gerard Bondur     |               0 |
|           1143 | Anthony Bow       |               0 |
|           1619 | Tom King          |               0 |
|           1625 | Yoshimi Kato      |               0 |
+----------------+-------------------+-----------------+
23 rows in set (0.16 sec)





2)	Show total quantities, total quantities in stock, left over quantities for each product and each customer. Sort the data by customer number.

Tables: Customers, Orders, Orderdetails, Products


mysql> C.CustomerNumber,C.customerName,P.ProductCode,p.productname,sum(OD.Quantityordered) as totalorderedquantity, pr.quantityinstock, pr.quantityinstock - sum(od.quantityordered) as leftoverquantity
    -> from customers c join orders O on c.customernumber = o.customernumber join
    -> orderdetails od on o.ordernumber = od.ordernumber join products p on od.productcode = p.productcode
    -> group by c.customernumber, p.productcode
    -> order by c.customernumber limit 10;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'C.CustomerNumber,C.customerName,P.ProductCode,p.productname,sum(OD.Quantityorder' at line 1
mysql> select C.CustomerNumber,C.customerName,P.ProductCode,p.productname,sum(OD.Quantityordered) as totalorderedquantity, pr.quantityinstock, pr.quantityinstock - sum(od.quantityordered) as leftoverquantity
    -> from customers c join orders O on c.customernumber = o.customernumber join
    -> orderdetails od on o.ordernumber = od.ordernumber join products p on od.productcode = p.productcode
    -> group by c.customernumber, p.productcode
    -> order by c.customernumber limit 10;
ERROR 1054 (42S22): Unknown column 'pr.quantityinstock' in 'field list'
mysql> ^C
mysql> SELECT
    ->     C.CustomerNumber,
    ->     C.CustomerName,
    ->     P.ProductCode,
    ->     P.ProductName,
    ->     SUM(OD.QuantityOrdered) AS TotalOrderedQuantity,
    ->     PR.QuantityInStock,
    ->     PR.QuantityInStock - SUM(OD.QuantityOrdered) AS LeftoverQuantity
    -> FROM
    ->     Customers C
    -> JOIN
    ->     Orders O ON C.CustomerNumber = O.CustomerNumber
    -> JOIN
    ->     Orderdetails OD ON O.OrderNumber = OD.OrderNumber
    -> JOIN
    ->     Products P ON OD.ProductCode = P.ProductCode
    -> JOIN
    ->     Products PR ON P.ProductCode = PR.ProductCode
    -> GROUP BY
    ->     C.CustomerNumber,
    ->     P.ProductCode
    -> ORDER BY
    ->     C.CustomerNumber;
+----------------+------------------------------------+-------------+---------------------------------------------+----------------------+-----------------+------------------+
| CustomerNumber | CustomerName                       | ProductCode | ProductName                                 | TotalOrderedQuantity | QuantityInStock | LeftoverQuantity |
+----------------+------------------------------------+-------------+---------------------------------------------+----------------------+-----------------+------------------+
|            103 | Atelier graphique                  | S10_2016    | 1996 Moto Guzzi 1100i                       |                   39 |            6625 |             6586 |
|            103 | Atelier graphique                  | S18_1589    | 1965 Aston Martin DB5                       |                   26 |            9042 |             9016 |
|            103 | Atelier graphique                  | S18_2625    | 1936 Harley Davidson El Knucklehead         |                   32 |            4357 |             4325 |
|            103 | Atelier graphique                  | S18_2870    | 1999 Indy 500 Monte Carlo SS                |                   46 |            8164 |             8118 |
|            103 | Atelier graphique                  | S18_3685    | 1948 Porsche Type 356 Roadster              |                   34 |            8990 |             8956 |
|            103 | Atelier graphique                  | S24_1628    | 1966 Shelby Cobra 427 S/C                   |                   50 |            8197 |             8147 |
|            103 | Atelier graphique                  | S24_2022    | 1938 Cadillac V-16 Presidential Limousine   |                   43 |            2847 |             2804 |
|            112 | Signal Gift Stores                 | S18_1129    | 1993 Mazda RX-7                             |                   34 |            3975 |             3941 |
|            112 | Signal Gift Stores                 | S18_1342    | 1937 Lincoln Berline                        |                   42 |            8693 |             8651 |
|            112 | Signal Gift Stores                 | S18_1589    | 1965 Aston Martin DB5                       |                   23 |            9042 |             9019 |
|            112 | Signal Gift Stores                 | S18_1749    | 1917 Grand Touring Sedan                    |                   21 |            2724 |             2703 |







3)	Create below tables and fields. (You can add the data as per your wish)

●	Laptop: (Laptop_Name)
●	Colours: (Colour_Name)
Perform cross join between the two tables and find number of rows.


mysql> ^C
mysql> CREATE TABLE Laptop (
    ->     Laptop_ID INT PRIMARY KEY AUTO_INCREMENT,
    ->     Laptop_Name VARCHAR(255) NOT NULL
    -> );
Query OK, 0 rows affected (0.38 sec)

mysql>
mysql> INSERT INTO Laptop (Laptop_Name) VALUES
    -> ('DELL'),
    -> ('DELL'),
    -> ('DELL'),
    -> ('HP'),
    -> ('HP'),
    -> ('HP');
Query OK, 3 rows affected (0.03 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> desc laptop;
+-------------+--------------+------+-----+---------+----------------+
| Field       | Type         | Null | Key | Default | Extra          |
+-------------+--------------+------+-----+---------+----------------+
| Laptop_ID   | int          | NO   | PRI | NULL    | auto_increment |
| Laptop_Name | varchar(255) | NO   |     | NULL    |                |
+-------------+--------------+------+-----+---------+----------------+
2 rows in set (0.06 sec)

mysql> CREATE TABLE Colours (
    ->     Colour_ID INT PRIMARY KEY AUTO_INCREMENT,
    ->     Colour_Name VARCHAR(50) NOT NULL
    -> );
Query OK, 0 rows affected (0.06 sec)

mysql>
mysql> INSERT INTO Colours (Colour_Name) VALUES
    -> ('Red'),
    -> ('Blue'),
    -> ('Green'),
    -> ('Black');
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> desc colours;
+-------------+-------------+------+-----+---------+----------------+
| Field       | Type        | Null | Key | Default | Extra          |
+-------------+-------------+------+-----+---------+----------------+
| Colour_ID   | int         | NO   | PRI | NULL    | auto_increment |
| Colour_Name | varchar(50) | NO   |     | NULL    |                |
+-------------+-------------+------+-----+---------+----------------+
2 rows in set (0.00 sec)

mysql> SELECT *
    -> FROM Laptop
    -> CROSS JOIN Colours;
+-----------+-------------+-----------+-------------+
| Laptop_ID | Laptop_Name | Colour_ID | Colour_Name |
+-----------+-------------+-----------+-------------+
|         3 | Laptop C    |         1 | Red         |
|         2 | Laptop B    |         1 | Red         |
|         1 | Laptop A    |         1 | Red         |
|         3 | Laptop C    |         2 | Blue        |
|         2 | Laptop B    |         2 | Blue        |
|         1 | Laptop A    |         2 | Blue        |
|         3 | Laptop C    |         3 | Green       |
|         2 | Laptop B    |         3 | Green       |
|         1 | Laptop A    |         3 | Green       |
|         3 | Laptop C    |         4 | Black       |
|         2 | Laptop B    |         4 | Black       |
|         1 | Laptop A    |         4 | Black       |
+-----------+-------------+-----------+-------------+
12 rows in set (0.15 sec)

mysql> SELECT COUNT(*) AS Number_of_Rows
    -> FROM Laptop
    -> CROSS JOIN Colours;
+----------------+
| Number_of_Rows |
+----------------+
|             12 |
+----------------+
1 row in set (0.08 sec)




4)	Create table project with below fields.

●	EmployeeID
●	FullName
●	Gender
●	ManagerID
Add below data into it.
INSERT INTO Project VALUES(1, 'Pranaya', 'Male', 3);
INSERT INTO Project VALUES(2, 'Priyanka', 'Female', 1);
INSERT INTO Project VALUES(3, 'Preety', 'Female', NULL);
INSERT INTO Project VALUES(4, 'Anurag', 'Male', 1);
INSERT INTO Project VALUES(5, 'Sambit', 'Male', 1);
INSERT INTO Project VALUES(6, 'Rajesh', 'Male', 3);
INSERT INTO Project VALUES(7, 'Hina', 'Female', 3);
Find out the names of employees and their related managers.


mysql> CREATE TABLE Project (
    ->     EmployeeID INT PRIMARY KEY,
    ->     FullName VARCHAR(255),
    ->     Gender ENUM('Male', 'Female'),
    ->     ManagerID INT
    -> );
Query OK, 0 rows affected (0.06 sec)

mysql>
mysql> INSERT INTO Project VALUES
    -> (1, 'Pranaya', 'Male', 3),
    -> (2, 'Priyanka', 'Female', 1),
    -> (3, 'Preety', 'Female', NULL),
    -> (4, 'Anurag', 'Male', 1),
    -> (5, 'Sambit', 'Male', 1),
    -> (6, 'Rajesh', 'Male', 3),
    -> (7, 'Hina', 'Female', 3);
Query OK, 7 rows affected (0.04 sec)
Records: 7  Duplicates: 0  Warnings: 0

mysql> select * from project;
+------------+----------+--------+-----------+
| EmployeeID | FullName | Gender | ManagerID |
+------------+----------+--------+-----------+
|          1 | Pranaya  | Male   |         3 |
|          2 | Priyanka | Female |         1 |
|          3 | Preety   | Female |      NULL |
|          4 | Anurag   | Male   |         1 |
|          5 | Sambit   | Male   |         1 |
|          6 | Rajesh   | Male   |         3 |
|          7 | Hina     | Female |         3 |
+------------+----------+--------+-----------+
7 rows in set (0.00 sec)

mysql> SELECT
    ->     e.FullName AS EmployeeName,
    ->     e.Gender AS EmployeeGender,
    ->     m.FullName AS ManagerName,
    ->     m.Gender AS ManagerGender
    -> FROM Project e
    -> LEFT JOIN Project m ON e.ManagerID = m.EmployeeID;
+--------------+----------------+-------------+---------------+
| EmployeeName | EmployeeGender | ManagerName | ManagerGender |
+--------------+----------------+-------------+---------------+
| Pranaya      | Male           | Preety      | Female        |
| Priyanka     | Female         | Pranaya     | Male          |
| Preety       | Female         | NULL        | NULL          |
| Anurag       | Male           | Pranaya     | Male          |
| Sambit       | Male           | Pranaya     | Male          |
| Rajesh       | Male           | Preety      | Female        |
| Hina         | Female         | Preety      | Female        |
+--------------+----------------+-------------+---------------+
7 rows in set (0.01 sec)


Day 8



Create table facility. Add the below fields into it.
●	Facility_ID
●	Name
●	State
●	Country

i) Alter the table by adding the primary key and auto increment to Facility_ID column.
ii) Add a new column city after name with data type as varchar which should not accept any null values.


mysql> CREATE TABLE facility (
    ->     Facility_ID INT,
    ->     Name VARCHAR(255),
    ->     State VARCHAR(255),
    ->     Country VARCHAR(255)
    -> );
Query OK, 0 rows affected (0.10 sec)

mysql> ALTER TABLE facility
    -> ADD COLUMN Facility_ID INT AUTO_INCREMENT PRIMARY KEY;
ERROR 1060 (42S21): Duplicate column name 'Facility_ID'
mysql> ALTER TABLE facility
    ->  Facility_ID INT AUTO_INCREMENT PRIMARY KEY;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'Facility_ID INT AUTO_INCREMENT PRIMARY KEY' at line 2
mysql> CREATE TABLE facility (
    ->     Facility_ID INT auto increment primary key,
    ->     Name VARCHAR(255),
    ->     State VARCHAR(255),
    ->     Country VARCHAR(255));
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'auto increment primary key,
    Name VARCHAR(255),
    State VARCHAR(255),
    C' at line 2
mysql> ALTER TABLE facility
    -> ADD COLUMN City VARCHAR(255) NOT NULL AFTER Name;
Query OK, 0 rows affected (0.27 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc facility;
+-------------+--------------+------+-----+---------+-------+
| Field       | Type         | Null | Key | Default | Extra |
+-------------+--------------+------+-----+---------+-------+
| Facility_ID | int          | YES  |     | NULL    |       |
| Name        | varchar(255) | YES  |     | NULL    |       |
| City        | varchar(255) | NO   |     | NULL    |       |
| State       | varchar(255) | YES  |     | NULL    |       |
| Country     | varchar(255) | YES  |     | NULL    |       |
+-------------+--------------+------+-----+---------+-------+
5 rows in set (0.07 sec)

mysql> alter table facility update coloumn facility_id int auto_increment primary key;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'update coloumn facility_id int auto_increment primary key' at line 1
mysql>  update table coloumn facility_id int auto_increment primary key;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'table coloumn facility_id int auto_increment primary key' at line 1
mysql>  alter table coloumn facility_id int auto_increment primary key;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'facility_id int auto_increment primary key' at line 1
mysql>  alter table coloumn facility_id int auto_increment primary key^C
mysql> ALTER TABLE facility
    -> ADD COLUMN Facility_ID INT AUTO_INCREMENT PRIMARY KEY;
ERROR 1060 (42S21): Duplicate column name 'Facility_ID'
mysql> ALTER TABLE facility
    -> change COLUMN Facility_ID INT AUTO_INCREMENT PRIMARY KEY;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT AUTO_INCREMENT PRIMARY KEY' at line 2
mysql> ALTER TABLE facility
    -> ADD PRIMARY KEY (Facility_ID);
Query OK, 0 rows affected (0.15 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql>
mysql> ALTER TABLE facility
    -> MODIFY COLUMN Facility_ID INT AUTO_INCREMENT;
Query OK, 0 rows affected (0.07 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc facility;
+-------------+--------------+------+-----+---------+----------------+
| Field       | Type         | Null | Key | Default | Extra          |
+-------------+--------------+------+-----+---------+----------------+
| Facility_ID | int          | NO   | PRI | NULL    | auto_increment |
| Name        | varchar(255) | YES  |     | NULL    |                |
| City        | varchar(255) | NO   |     | NULL    |                |
| State       | varchar(255) | YES  |     | NULL    |                |
| Country     | varchar(255) | YES  |     | NULL    |                |
+-------------+--------------+------+-----+---------+----------------+
5 rows in set (0.01 sec)


Day 9
Create table university with below fields.
●	ID
●	Name
Add the below data into it as it is.
INSERT INTO University
VALUES (1, "       Pune          University     "), 
               (2, "  Mumbai          University     "),
              (3, "     Delhi   University     "),
              (4, "Madras University"),
              (5, "Nagpur University");
Remove the spaces from everywhere and update the column like Pune University etc.


mysql> CREATE TABLE University (
    ->     ID INT PRIMARY KEY,
    ->     Name VARCHAR(255)
    -> );
Query OK, 0 rows affected (0.34 sec)

mysql> INSERT INTO University
    -> VALUES (1, "       Pune          University     "),
    ->        (2, "  Mumbai          University     "),
    ->        (3, "     Delhi   University     "),
    ->        (4, "Madras University"),
    ->        (5, "Nagpur University");
Query OK, 5 rows affected (0.07 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> UPDATE University
    -> SET Name = TRIM(BOTH ' ' FROM Name);
Query OK, 3 rows affected (0.03 sec)
Rows matched: 5  Changed: 3  Warnings: 0

mysql> select * from university;
+----+----------------------------+
| ID | Name                       |
+----+----------------------------+
|  1 | Pune          University   |
|  2 | Mumbai          University |
|  3 | Delhi   University         |
|  4 | Madras University          |
|  5 | Nagpur University          |
+----+----------------------------+
5 rows in set (0.02 sec)

mysql> UPDATE University
    -> SET Name = TRIM(Name);
Query OK, 0 rows affected (0.02 sec)
Rows matched: 5  Changed: 0  Warnings: 0


Day 10
Create the view products status. Show year wise total products sold. Also find the percentage of total value for each year. The output should look as shown in below figure.









Day 11
1)	Create a stored procedure GetCustomerLevel which takes input as customer number and gives the output as either Platinum, Gold or Silver as per below criteria.

Table: Customers

●	Platinum: creditLimit > 100000
●	Gold: creditLimit is between 25000 to 100000
●	Silver: creditLimit < 25000


CREATE PROCEDURE GetCustomerLevel(IN customerNumber INT)
BEGIN
    DECLARE customerCreditLimit DECIMAL(10, 2);
    DECLARE customerLevel VARCHAR(50);
    
    SELECT creditLimit INTO customerCreditLimit
    FROM Customers
    WHERE customerNumber = customerNumber;
    
    IF customerCreditLimit > 100000 THEN
        SET customerLevel = 'Platinum';
    ELSEIF customerCreditLimit BETWEEN 25000 AND 100000 THEN
        SET customerLevel = 'Gold';
    ELSE
        SET customerLevel = 'Silver';
    END IF;
    
    SELECT customerLevel AS Customer_Level;
END ;




Day 13
1)	Display the customer numbers and customer names from customers table who have not placed any orders using subquery

Table: Customers, Orders


 select customernumber,customername from customers where customernumber NOT IN (select distinct(customernumber) from orders);
+----------------+--------------------------------+
| customernumber | customername                   |
+----------------+--------------------------------+
|            125 | Havel & Zbyszek Co             |
|            168 | American Souvenirs Inc         |
|            169 | Porto Imports Co.              |
|            206 | Asian Shopping Network, Co     |
|            223 | Natürlich Autos                |
|            237 | ANG Resellers                  |
|            247 | Messner Shopping Network       |
|            273 | Franken Gifts, Co              |
|            293 | BG&E Collectables              |
|            303 | Schuyler Imports               |
|            307 | Der Hund Imports               |
|            335 | Cramer Spezialitäten, Ltd      |
|            348 | Asian Treasures, Inc.          |
|            356 | SAR Distributors, Co           |
|            361 | Kommission Auto                |
|            369 | Lisboa Souveniers, Inc         |
|            376 | Precious Collectables          |
|            409 | Stuttgart Collectable Exchange |
|            443 | Feuer Online Stores, Inc       |
|            459 | Warburg Exchange               |
|            465 | Anton Designs, Ltd.            |
|            477 | Mit Vergnügen & Co.            |
|            480 | Kremlin Collectables, Co.      |
|            481 | Raanan Stores, Inc             |
+----------------+--------------------------------+
24 rows in set (0.14 sec)


2)	Write a full outer join between customers and orders using union and get the customer number, customer name, count of orders for every customer.
Table: Customers, Orders



mysql>  with ordercount as (select c.customernumber,c.customername,count(o.ordernumber) order_count
    ->    from customers c
    ->     LEFT JOIN
    ->      orders o on c.customernumber = o.customernumber
    ->      group by c.customernumber,c.customername
    ->      UNION
    ->      select c.customernumber,c.customername,count(o.ordernumber) order_count
    ->      from customers c
    ->      RIGHT JOIN
    ->      orders o on c.customernumber = o.customernumber
    ->      group by c.customernumber,c.customername)
    ->      select * from ordercount;
+----------------+------------------------------------+-------------+
| customernumber | customername                       | order_count |
+----------------+------------------------------------+-------------+
|            103 | Atelier graphique                  |           3 |
|            112 | Signal Gift Stores                 |           3 |
|            114 | Australian Collectors, Co.         |           5 |
|            119 | La Rochelle Gifts                  |           4 |
|            121 | Baane Mini Imports                 |           4 |
|            124 | Mini Gifts Distributors Ltd.       |          17 |
|            125 | Havel & Zbyszek Co                 |           0 |
|            128 | Blauer See Auto, Co.               |           4 |
|            129 | Mini Wheels Co.                    |           3 |
|            131 | Land of Toys Inc.                  |           4 |
|            141 | Euro+ Shopping Channel             |          26 |
|            144 | Volvo Model Replicas, Co           |           4 |
|            145 | Danish Wholesale Imports           |           5 |
|            146 | Saveley & Henriot, Co.             |           3 |
|            148 | Dragon Souveniers, Ltd.            |           5 |
|            151 | Muscle Machine Inc                 |           4 |
|            157 | Diecast Classics Inc.              |           4 |
|            161 | Technics Stores Inc.               |           4 |
|            166 | Handji Gifts& Co                   |           4 |
|            167 | Herkku Gifts                       |           3 |
|            168 | American Souvenirs Inc             |           0 |
|            169 | Porto Imports Co.                  |           0 |
|            171 | Daedalus Designs Imports           |           2 |
|            172 | La Corne D'abondance, Co.          |           3 |
|            173 | Cambridge Collectables Co.         |           2 |
|            175 | Gift Depot Inc.                    |           3 |
|            177 | Osaka Souveniers Co.               |           2 |
|            181 | Vitachrome Inc.                    |           3 |
|            186 | Toys of Finland, Co.               |           3 |
|            187 | AV Stores, Co.                     |           3 |
|            189 | Clover Collections, Co.            |           2 |
|            198 | Auto-Moto Classics Inc.            |           3 |
|            201 | UK Collectables, Ltd.              |           3 |
|            202 | Canadian Gift Exchange Network     |           2 |
|            204 | Online Mini Collectables           |           2 |
|            205 | Toys4GrownUps.com                  |           3 |
|            206 | Asian Shopping Network, Co         |           0 |
|            209 | Mini Caravy                        |           3 |
|            211 | King Kong Collectables, Co.        |           2 |
|            216 | Enaco Distributors                 |           3 |
|            219 | Boards & Toys Co.                  |           2 |
|            223 | Natürlich Autos                    |           0 |
|            227 | Heintze Collectables               |           2 |
|            233 | Québec Home Shopping Network       |           3 |
|            237 | ANG Resellers                      |           0 |
|            239 | Collectable Mini Designs Co.       |           2 |
|            240 | giftsbymail.co.uk                  |           2 |
|            242 | Alpha Cognac                       |           3 |
|            247 | Messner Shopping Network           |           0 |
|            249 | Amica Models & Co.                 |           2 |
|            250 | Lyon Souveniers                    |           3 |
|            256 | Auto Associés & Cie.               |           2 |
|            259 | Toms Spezialitäten, Ltd            |           2 |
|            260 | Royal Canadian Collectables, Ltd.  |           2 |
|            273 | Franken Gifts, Co                  |           0 |
|            276 | Anna's Decorations, Ltd            |           4 |
|            278 | Rovelli Gifts                      |           3 |
|            282 | Souveniers And Things Co.          |           4 |
|            286 | Marta's Replicas Co.               |           2 |
|            293 | BG&E Collectables                  |           0 |
|            298 | Vida Sport, Ltd                    |           2 |
|            299 | Norway Gifts By Mail, Co.          |           2 |
|            303 | Schuyler Imports                   |           0 |
|            307 | Der Hund Imports                   |           0 |
|            311 | Oulu Toy Supplies, Inc.            |           3 |
|            314 | Petit Auto                         |           3 |
|            319 | Mini Classics                      |           2 |
|            320 | Mini Creations Ltd.                |           3 |
|            321 | Corporate Gift Ideas Co.           |           4 |
|            323 | Down Under Souveniers, Inc         |           5 |
|            324 | Stylish Desk Decors, Co.           |           3 |
|            328 | Tekni Collectables Inc.            |           3 |
|            333 | Australian Gift Network, Co        |           3 |
|            334 | Suominen Souveniers                |           3 |
|            335 | Cramer Spezialitäten, Ltd          |           0 |
|            339 | Classic Gift Ideas, Inc            |           2 |
|            344 | CAF Imports                        |           2 |
|            347 | Men 'R' US Retailers, Ltd.         |           2 |
|            348 | Asian Treasures, Inc.              |           0 |
|            350 | Marseille Mini Autos               |           3 |
|            353 | Reims Collectables                 |           5 |
|            356 | SAR Distributors, Co               |           0 |
|            357 | GiftsForHim.com                    |           3 |
|            361 | Kommission Auto                    |           0 |
|            362 | Gifts4AllAges.com                  |           3 |
|            363 | Online Diecast Creations Co.       |           3 |
|            369 | Lisboa Souveniers, Inc             |           0 |
|            376 | Precious Collectables              |           0 |
|            379 | Collectables For Less Inc.         |           3 |
|            381 | Royale Belge                       |           4 |
|            382 | Salzburg Collectables              |           4 |
|            385 | Cruz & Sons Co.                    |           3 |
|            386 | L'ordine Souveniers                |           3 |
|            398 | Tokyo Collectables, Ltd            |           4 |
|            406 | Auto Canal+ Petit                  |           3 |
|            409 | Stuttgart Collectable Exchange     |           0 |
|            412 | Extreme Desk Decorations, Ltd      |           3 |
|            415 | Bavarian Collectables Imports, Co. |           1 |
|            424 | Classic Legends Inc.               |           3 |
|            443 | Feuer Online Stores, Inc           |           0 |
|            447 | Gift Ideas Corp.                   |           3 |
|            448 | Scandinavian Gift Ideas            |           3 |
|            450 | The Sharp Gifts Warehouse          |           4 |
|            452 | Mini Auto Werke                    |           3 |
|            455 | Super Scale Inc.                   |           2 |
|            456 | Microscale Inc.                    |           2 |
|            458 | Corrida Auto Replicas, Ltd         |           3 |
|            459 | Warburg Exchange                   |           0 |
|            462 | FunGiftIdeas.com                   |           3 |
|            465 | Anton Designs, Ltd.                |           0 |
|            471 | Australian Collectables, Ltd       |           3 |
|            473 | Frau da Collezione                 |           2 |
|            475 | West Coast Collectables Co.        |           2 |
|            477 | Mit Vergnügen & Co.                |           0 |
|            480 | Kremlin Collectables, Co.          |           0 |
|            481 | Raanan Stores, Inc                 |           0 |
|            484 | Iberia Gift Imports, Corp.         |           2 |
|            486 | Motor Mint Distributors Inc.       |           3 |
|            487 | Signal Collectibles Ltd.           |           2 |
|            489 | Double Decker Gift Stores, Ltd     |           2 |
|            495 | Diecast Collectables               |           2 |
|            496 | Kelly's Gift Shop                  |           4 |
+----------------+------------------------------------+-------------+
122 rows in set (0.04 sec)




3)	Show the second highest quantity ordered value for each order number.
Table: Orderdetails

mysql>  SELECT orderNumber, MAX(quantityOrdered) AS Ordered_Quantity
    ->      FROM (
    ->          SELECT orderNumber, quantityOrdered
    ->          FROM orderdetails
    ->          WHERE (orderNumber, quantityOrdered) NOT IN (
    ->              SELECT orderNumber, MAX(quantityOrdered)
    ->              FROM orderdetails
    ->              GROUP BY orderNumber)
    ->      ) AS subquery
    ->      GROUP BY orderNumber limit 12;
+-------------+------------------+
| orderNumber | Ordered_Quantity |
+-------------+------------------+
|       10100 |               49 |
|       10101 |               45 |
|       10102 |               39 |
|       10103 |               45 |
|       10104 |               44 |
|       10105 |               44 |
|       10106 |               49 |
|       10107 |               38 |
|       10108 |               44 |
|       10109 |               46 |
|       10110 |               46 |
|       10111 |               43 |
+-------------+------------------+
12 rows in set (0.37 sec)


4)	For each order number count the number of products and then find the min and max of the values among count of orders.
Table: Orderdetails

mysql>  select ordernumber,count(distinct(productcode)) as product_count from orderdetails group by ordernumber limit 5;
+-------------+---------------+
| ordernumber | product_count |
+-------------+---------------+
|       10100 |             4 |
|       10101 |             4 |
|       10102 |             2 |
|       10103 |            16 |
|       10104 |            13 |
+-------------+---------------+
5 rows in set (0.01 sec)

mysql> WITH product_Cnt as (select ordernumber,count(distinct(productcode)) as product_count from orderdetails group by ordernumber)
    ->  select min(product_count) as MIN,max(product_count) as MAX from product_cnt;
+------+------+
| MIN  | MAX  |
+------+------+
|    1 |   18 |
+------+------+
1 row in set (0.01 sec)


5)	Find out how many product lines are there for which the buy price value is greater than the average of buy price value. Show the output as product line and its count


mysql> SELECT productLine, COUNT(*) AS productCount
    ->     FROM products
    ->     WHERE buyPrice > (SELECT AVG(buyPrice) FROM products)
    ->     GROUP BY productLine;
+------------------+--------------+
| productLine      | productCount |
+------------------+--------------+
| Classic Cars     |           24 |
| Motorcycles      |            6 |
| Planes           |            5 |
| Ships            |            1 |
| Trains           |            1 |
| Trucks and Buses |            7 |
| Vintage Cars     |           10 |
+------------------+--------------+
7 rows in set (0.03 sec)


Day 14




Create the table Emp_EH. Below are its fields.
●	EmpID (Primary Key)
●	EmpName
●	EmailAddress
Create a procedure to accept the values for the columns in Emp_EH. Handle the error using exception handling concept. Show the message as “Error occurred” in case of anything wrong.




CREATE DEFINER=`root`@`localhost` PROCEDURE `insertEmpEH`(
    IN a_EmpID INT,
    IN b_EmpName VARCHAR(111),
    IN c_EmailAddress VARCHAR(111)
)
BEGIN
    DECLARE EXIT HANDLER FOR 1062
    BEGIN
        SELECT "Error has occurred: Duplicate entry" AS msg;
    END;
    
    INSERT INTO EmpEH (EmpID, EmpName, EmailAddress)
    VALUES (a_EmpID, b_EmpName, c_EmailAddress);
END


mysql> call insertempeh(1,"james","james@gmail.com");
+-------------------------------------+
| msg                                 |
+-------------------------------------+
| Error has occurred: Duplicate entry |
+-------------------------------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.01 sec)

















